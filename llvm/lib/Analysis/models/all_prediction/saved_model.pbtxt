meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "PartitionedCall"
        input_arg {
          name: "args"
          type_list_attr: "Tin"
        }
        output_arg {
          name: "output"
          type_list_attr: "Tout"
        }
        attr {
          name: "Tin"
          type: "list(type)"
          has_minimum: true
        }
        attr {
          name: "Tout"
          type: "list(type)"
          has_minimum: true
        }
        attr {
          name: "f"
          type: "func"
        }
        attr {
          name: "config"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "config_proto"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "executor_type"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "StatefulPartitionedCall"
        input_arg {
          name: "args"
          type_list_attr: "Tin"
        }
        output_arg {
          name: "output"
          type_list_attr: "Tout"
        }
        attr {
          name: "Tin"
          type: "list(type)"
          has_minimum: true
        }
        attr {
          name: "Tout"
          type: "list(type)"
          has_minimum: true
        }
        attr {
          name: "f"
          type: "func"
        }
        attr {
          name: "config"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "config_proto"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "executor_type"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "allowed_devices"
          type: "list(string)"
          default_value {
            list {
            }
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "unknown"
    stripped_default_attrs: true
  }
  graph_def { node {
  name: "Input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 87
        }
      }
    }
  }
}
node {
  name: "sequential/dense/Cast"
  op: "Cast"
  input: "Input"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 87
          }
          dim {
            size: 24
          }
        }
        tensor_content: "i\031\t>\350\376C>s\203&>\277\375=>}y\376=9\032h\275\350E\021>y\035e\274\016\364}\275oL\370=\247\323%=\370J8=\330\240T>\376\003\021>4\314\350\273\321o3=\\\0131\275F\t\372<\312\215\204>\273\324t>V\227d>\225\272\316>\332\340\024\276\331\364\211<B_\266\276\\`\000\276\3736\200>\237\2403\276:\335\353\275\217:\227\275\274\373\017\277\217\205\311=).\326<\316\226=\276\276\017\321\276\017s\301<\035\3475\2761\270\006\273L\374\237;\027\037L=\031f\025\277\332\234\200\275\2339.=X\"\212=\237\314\333\276K\201\020\277\346\236F\276\316\251\257\276\212\027\276\274\022\021\214\274h\312\010\274\024\177\337\272\333\206\204;\'\"\034;\311`\314<\330\235u\274\350\237x\274\267\204Y<?,\036\275\203\217\305<\333\327\241\274\005\303\306\273\307\214\334;x\342B\274R\211\213\274\204aO\276\002\217B\274\213\322\305\274\376:v9\250\021\211\274\266\004\026;}\016\205\275\344\243\251=.g\024\277?\335J>\245\272$=\324\260\034\300\270\277\336<\\\251\030\276qa\235>\320|\032=t\355\362>N\377\017>Bg,>\033\310\220\276\227\204\310\277\353\021#\275\205:E>\206!`\276\026~\211\275sj$=\364\3516\277,\005\331=g\0004\276\231a\344<\370_\235>\343\006z?#\027\264?\022\235#\277R\267!?\304\037q\276\360\3649?R\333\331\275\n{\243?\317\275\030@\304d\212>[\200\036@\037\263!@L\212~?q\365\336?\337_\370?\220\301\363\276;!\331\276\001)\201=\303%\220\300\331+\364?\302\275\031?\340\373\007\277\210\256R=\030qI>\350\364&\277Bm\340\275l\313\355\274\023\203\326=\031HO\276\3618J=`\364\266\276\006\027\353?\320\005\314\275\256:\206\275\014Ni?I\260!>\254\207\210=G\370C>Av\n?\360\235\031\277h\344\305\275\247\273\252=\317vU\300\237\177\247>\005\001\346>\214\2708\27733\014?\265Y\001\277\372\207A\275\001\272\'\276\347!\323\275\223\005\"\276w&\202\276\013\344\273\274\220\202\024\276\010\210H\276\010wE\275\315\256\024\276$\307\246\273g\223\017\276\215\026Z\276\245\237_\275k\226F\276\240\367\300\276+\373c\276\275c\031\276\375]1\276\177Vr\2760\215\'\276\365\023\351\275;^\205\276\331R\350\274\256G\371\275\037s8\276\027X.>\336s\002\2778\201\031\275\276\031\341\275\3365M\275\030\235\246\275\272\273\002\276\316\362 \276\021\337&\275\354\013\273\275\352*\225=\205\010/\276\211)\343<\376#(\275F\0225\277\013\330\005\275\27282\275h\310\037\275\000\022\322\275\365\254\300\275\r\265\311\274$_A\275\030D\323\275\344TJ\276Wt\'\277\3000\233\276|\342\214<\357.t=ln\336\274\26161>g\205\'\275dc\310\274\035p/>\3108(\275;\342O=\243\223\205=\n\303\370\274\202K\234=\336n\251=\022\214Q\276\2333\237\273\353\".>\007\037\007=\236\034\000\277}k\026<\007y\330<\311L\200\274&\3017\2754^u\276<)&:\207\005\026\275\tjs\274~\265~=v\227\214\275Y\\\302\274\t\r\260\275\212\021l\275\223l\260<\225b\257<Y\250\247;Y\242S\274\262\350\247\276\233q \276\324\344/\275\026Y\214<\203\255#\275\241\275\355;zJ\027\276\244v\037\274\251CB\275K\243\246<c8\002=2~\235\277\243w\331>W\213\233;\261~C\274w\342\006<+\363\235\275c\035\213\275\351j\">\345V\372\275\276[ \276\007\021\225=\274\276r;^\351\235\276| \017<\256#_>#\213\'\276~\250K<?G\371\275\215c\274\275\351\273\211\276\3576\321=m\202^\273\315=\'\276\024\030\272<1\215\240\276\000*-\277\013\317X\273>:l\276JU\021\276t\032\257\273\265\003\203\275\\\323\010\276\351\262g\276\261\347x\274\214\205[\275\360\031\210\275baq\275\034\210a\276B#_\276\243\250\220<\230\020\021=U(O>\272\233\322\275\255\360\274\276V\321I\275\240\234\177\276\231\0241=\034u\226=W\204?\277YW\257\277\303\202\372\275\372dX>\037|W=1\006\320>\243|\217\277\322\026\247=\343\246\235>\231\002\020>7\0030\275X\232\024\276+\243\022=\204\307\373>&\005\017\277\330\002\255<\360\262\005\275e\375\t\275p\022n>,lK>\310m\016\277<\231\257>\364\326\205\276\267\n\\\276\334\222g\274\263h\364\274L\000(\275*oU>9-\342=\313\240\346\276\013A\313>\016hr\276\0346\223\276\377=t<\227mk\276\314\003Y\275\205aK=V\2203\276C\205l\276>\210Z\276\242\334\005\276M\307@\275\313\340\201\276aS\335\275\225\333\243<\341\221\206\275?\350o\276g\023\321\275\204.O\277\t+\253=\323R?>\r\365b\275\265{\235\276\375\030\346\2762\022\274>\004\335\373\276\017Jm\277\'l\032\277\304v\305>4g\264\277\362\323\033>\3606\034\277\210g\345=i\013I>r\273\206\274\226 \321\277}V\205\275\367Q\202\277\340\346\016?S^\001\277vU\255\275\323\202\3259\310\217e\276b\343=\275a\251-\276\"\242\341=\001Y\220\276\230GK>\315\303\033\277-\242F\276\330\023R>\335\031\\:#\347\251\2758\231\210\276G\237\254=\212\236{\276\305\255;\276\320\272\022=\221\273>=\273\211\251\276W\251\334=i3Y>M\361\262\276S#-=\260Bq\274\3259G>\233@\000>\032R\347>\244\231\004\276VM\336=\014\t\234>\210\353/>v\211\364>\270\366d\274w\036\251\276F\271\013>H\304\271<2\035/>KN\013>hK\021\277\365\350\360\276K\014\037>\026Xa=S\211\022>\313\235P>\363\024Q\276\006@`\277\231\321\240=:\032\214;\320\340\300=\247\311A\276\245[\257\2766\310\331\274\305\035\231=\265z\000=\362\266T=G?\270?\037\365\365>\3042\"\2769\025\300>r\276\244\276wh\256\276\270\231\036>ks9?\234\355\220=\213&\027\276{\3262\276w\377e\277\244{\022>\031\307\004>\211\022\334>\321n\217>\325Nj\277P\267\266=\357\022F\276\375=\223\276\261\360k>\334\210m\277\014;\370=5T\024=\224\355\r\3007\240\264\275\365q\323\276\223\010&?\243vc;n\033\025?y\334\246\277*H\271\276i\376\357\275\003\350_\276B\0313\277\316\354\030\277\250\201\217\277\234u\206\276)Y\254\277\355\236h<\325\226\252>\211H\271\275y[\000>1\317\227<\301\243\224>\232\010\264\2758\320\245>y\354c<\033{\203=\320$z>\343\252\225\275\244\372\204\2754%\003>\200\301\007>\360\243\277=\362W<>\026)\255\276@x\005\275\203\265}\274\016M\305<pC(<!\307\274<D\005\323=\247u\005>\036\272\007?\022H/?<\030V?\275M\036\277$\335\334>N\352\200>TzZ?\232B\255?\244:\030> \204Y?\373n\034\276\273|[?\001y\213>cu\010?{\337\223\275\221\265\311>R\020\355>T*\210\276y|\234>\033V\032?\36784?]\247\014\27706\300>o\335\275?N\347\363?5e\r@\334\037\r?Bx3?\326i\000@\222v\030@q\241\227?(\215\253=\245Q\305?\034b\314?\361\265\205?S1k?\355\006\244?\277\346\t@\257\262%@\305\330\272?_\035r?%\274\306=\331\333.@\204\225.@\202\246n?i\231}?__\"@\"\215\332?\237T\227=\003)\222\275\214\274\324\276u\350b\277\220\252\n>U\034\006>\rL\216>\022\232\027\276\013\243\211\276\252\030\306=8\235\315\275!Y\377=\242T\250<\323A\311\275\276ND<\271Q\006>dg\273\276.0w\276\326\340\325\275\n\3075=\327\022\205>]\'\257<\023\315\307\276\na\217>|\301\233\277\246\223g\275\274\214\024\277I\264c=\234\'\036>X\014\014>V{\364>\177\367\360\276\347\257.\275\362w\377\276\234\210k\277sK\345\276\334\037\237>\2077\326\277\000\230\264=[\356m\276j\013\223\275I\271\004\276\027\242\223\276\352\337\264\277\267\367\271=\231F\226\277cW\313>\324Y\204\276QFO\2772.\310\276f\347~\275\007\354\323=\177\3264<\371\365\312\275\320\363P\277\226\203\004\274b\302\326<J&\204=\004\264\321\277\354]i\276\315\004\236?\214~N\277(\301\355\274b\233\035\277\2540\377=\270\233E\275\037\320\254\276\337\374\244<J\004\027\277\217g\001<H\344\211\276H\346-\277|\247+\277\267\254\337\277\263\005\014\275\357M\351>\260\344\206\276a\334|\276[\n\255\277P?1\275\222Y\235>D\251\317>\n+!<\204\005\241=:\342\026?t5\251>b\036\021?\033\343\037\276J\013\220\276\270B6=\254\205\326\2749\276\342\276)P\326\275\334\311N\277\3251\t?V\2760\276A{ \277E\271n\276\257\336\261?\200UO\2769-y\276)\313\n?\006\001\211?\333<\002\276\336fn?\302e\313\277\320\355\034?\006\375\364?\030\r\024\277\374^\265\277\372\344M\277x\3274?\265\322\035\276\372H\014\2762j\000?\327S\206>\350\332D?3.\256>\271y\177\276\276\217\037@C\316\240>9!\372>\305(j\276\343x\205>?6\324=\321\300\005>\3042\254?\342\272\205>M\367S?w\344\216\277\373La?9\212\270>\256&=\276\344.\030?\310q=>\347\037\212?\365!U?G\225\376\275\253\033K\276\321e\021?\301F\324>T\375B?\006\221\312\276\261\316\022>\371\305\016\276\340\217\260\273X\203\202=J\255\017\276\326\326\246\275\372!Y>\270\211h=@\242\216=d3F\276\202\021&\276\256\016\000>\016\205\264\275pZ\177\274\0106\267=DT9>\350i\n>\240\201J=\3542\367=P\r\030\274\222<\256\275h\337\035=6~\332\275\214vl>pl(=\020\371I\276\036\005U>\200i\220;.\342\321\275\2049\237=\340\357\216=t\337\221=Xk\005>8\372?\276\300\274\222<\214\037m>x2\033=`\345V\275b\nZ>\240R\246<\200u\214<\314\344\310=d \272=H~\201\275\324e:>\241\006G\276\204\247@\275\\;a\275\336B\021>\320L\021=R\026d>\223u\014\276\006>\257\2750\177\256<\270\037\323\274\234\322\355=\212\241\"\276$\266\201\275D\353\323=\242\314V>\014\016\252\275\000TI<\020\372N>\314G\235\275\210\022\021\276\026\264\005>\340{\256\273t\255\002\276\277x\037\276\354\342\253=\240C\375\274\334\362\307=\261\027\032\276\324\374g\275`1k\2764\360\205=\006q\007>\236\001\032\276@\223h=\240\335\005=\\N\253=\220Y\221\275q\207B\276|\3159\276\002s\257\275\220&x<\220\237+\276$\211\356=\272NF>\330\320\014\276\300\004-\276pL5>\324/l\276GL\343\275\236H\225\275\000L%\274\034\272[\276M\354\351\274\336\007\374\276\254\311\271\276\024\277\347\275W/\265>\262\202u\275H\351I>\345C\232>8z\303\276\353m\036\277\261\370c\275\000d1\276\304OY>\0246\205\276=\223\252\276\327\323\'?\365&*>\324\005+>\352\346\312>@\0364\276\334\312\364\276\375;$\274\242Y\352>\353L\210=(\217\355=\207\275\210\276$\324\244\276\217\233a\277xa\227>{(}>\222\260\014\276\013\r\247>g\304M>\232\240\237>\367\340\263>\034\"\341=.1\036>#\3057>\024\344\323>\254\314\232\276z\356\n=\020\235O\276\006\233\350=\255YX>\226D|;xL\201=\320y\226>\203+\315>\363,*\275:\241\237\276O\304\224\276\270CU>Q\001\224>\220\271m<\006\316\264\275,l\213>\215\263\351=\010\026\023\274\364\376^=P\3346>\276b?\274\220$n=|\362R>BCf\276;Hm\276h\250:=VK3>J\232\245><o\037\276)\003\305\276\335[L>\256\243\001>b\031\214>\032V\275=\021\025\360\276vw7\277\370\036G>\312W\304\275\023Y\000\276\3175\014\277\341\362#>\334\244$\275\214\375\030?\"\354\214>\341\327\206<4\313s=a}#>\377\335\013?c\315\232>\310\2623\276\273\212Q>\033A>>\267!U>\021C\030?\224\006\t>}l\002?_\207`:Q\350E\276g\263\203\276=\3726=dY\215>\325\304\234<\374\253$<_\270]>C\261\260\274\211\226\244>\347\336\326\276\326\270c>4\316F>\220>_\274\362@\031>\255\227\032?\332\204?>L\\\304=,Q\007>nC\255=K\355\032>Oz~\277=\264\235>\"\177\202=X\034{>\263+K=\361\200\001>\032\355\206=Js\207>\025\216\201>\274g\310>\313S \277\253\264\366=\273\333\267> S\361=$R\203=*\201\361<\326YQ=7\373~>\352\247\344\276\n \004\274y22=(\214\256=1}\277\275\322\271\224>\305m\372\2764\335\277>\267\357T=\235\203\022=n\240\010>j\370Q\276P\322\251\276\'FQ>4\3436<\250a\214< 1\n\275\203S)\272\004F.>\273+\223\276C\252|=\343o5>\001\2351<h*U>\02138>\032U\022>\036\345N\275\223n\271=J\"\003>\262\002\211:d\271l\277\246t\201>\275\2447\276\371C\355>\233\252\361\275$\243\014>\352\021J\277\260.Q>\215/>\276,\346\037?\324\034,=\000 \027\276\303\031\023?\235\222\374=(\234\212<\376\240\034?\310b\320>N\024\023>/\'`\277f\265\310\274\273\3671\276\177\271\211>1Ye=\263T\'?\346\024[\277\275\260\313>kqN\274Xz|>)\332:>*\266\366=j\332\261>\364?\244>.\013\027?j\237G>\346\263\362\276F\375\304=^\373\354>k\036\030>\302\032P\276,?`\276\265\365\367>\207\317\034>\354\204\371=asC?\354\007\r\276\320^\200>a\3276>\306\262\007\276\374\373\364\276\211\320\372>\274\033\344\275\240\3539\275pt\352=\271\261\201>\003\224\317\276X\304\207>\313\264\005>\357-\357=\036p\035\277)\322\212>\256\304Z\277\247=\215>\227=\024\276\005\233k\276/\316\215>\226F\210>\026\232z>K\254\372>\203\254=>\207\n[>\260\007\306>V4\r>\206F]?\361\311\222>uq\265=\255\313C\277\202\322\007\277\225\036\241\276O\315n>\030\247\316<\267\222\030\276\014|\216\276E:\324>/\372C\277\311B\206\2753\263M?\330\3241?!%\270=\333\342s\277\271\026\310>\031\315v\277\341\257T>\250\322;>\352\026\336\274@\202\003\277\236\223A>\254\363\241>\324\372\371>\002\224\360>6\311\277=\340y\317\276}\377\231\277A\213\316>\325\036\231>\344\306G\277\001\340\334>jO\247>Xu\014\277iY\232>c,h<y\270\277\276Q\345\315;>0F\277/i\252\275\013\004Q\276\000\240_>\204\255\217=\357*%\276\2668\202\277\302\361\204>>V\333\275\233F\010?\3172\376\276\22404\275@{[=\010\327\241=r\002*\276\364*>>p\202\200=\344]\202=\302rA\276\010V+\2752\234\276\275P\222\t=\250\210.=x\221R\276\026\222\025>\226\314\207\275\310FA=\351\343\001\276=\024\r\276H\3616>,\301-\276L\224\376=\326\213P>\356;N>\330t\212\274,\216\312<\354\303[>\"?\n?\017_\247?]J\200>G\246X>\336\357u>\226\224\350\276\324:g>\336\357\255>\343kU<V\377\246=\025O\302=\214\201\034=\262\014\352>\267\224\r\300\\\341=>\3365\033=\310M\340=\233eV>\335\372n>\304\256n\276O\200_>\302\251\203=e\337\205\276\211@$>\201\335\312\275\334\367\212>/\212\230>6AO>\222f.<j]\243\276zo\311\275\035k\013?\033\ng\276\316=5\276b\000\243>\222\233\200\274\337|\252>.\233\257>\331\221\274>O\253\017\272\354\346H>-\241\242\276\241\346R>\246\004R>k\302\252>/i\305\276\203\020%>\225mX\277\\\013\356\277\362\233\223=\037\365y>y4\240>?F\342>\023\014;>)eE>\313\266\251=\200\360,\277\273\217\021>X*\307\275c\334\260\276\006Rp=\322>\274>\333f\210>\275#+;\003@Q>\365[\330\276N\213\366=\305\273\375\276\014h\260>\332(I<\244\361o>\364\252#>|L\267\277\343y\276>`\260\200>\350\220V>\305a9\2762\354\001=\256\242#>\221\300\321\275@F\221>b\253\215>\247\304\272=y`\332\276\351\002\005>\n\034c>\\8\001\27599\254\275\2165\233=+2\032\277\343o\240>\366M\303<\316\241K>p\205\213>)m\000\275l\261{\276\202\277\006\277\241D\n?=\343@>I\234\320>\366\017\251\276m>\026\276\302\203$>\276\256\226>\276\030\262=\253T\253<\373\335K\276\300\251/>\007\351{>?\003\345>\023\021\317>\313\230)\276\303\003\221>g\365\337=H\253\177=\3219\312>Qk\334>\321+\305>oz!>\356\227\034\277w\335v\277]\016\221\275\254wn>L\342w>\014\232\312>G\366\334\276\\m\026>o\254\271>1F6>\351\274!>\260\265\267>\026\241m>a\371\022\274\345\325\261>*\254H?\373\266\'>\351\035)>\272C\203\276\215\332S\275\272\214y\276-\374\202>W*\223=\035\345m>\253p\017>\271e\235?\230\201^?\353>d=_l\244\300\037q\375>4\372\203?\370=\226>:P\366\277\351K\336\277\326o\303>-\205\245\3000\375\263?\202\262\003\277\256B\214?\2161\032\2771\232\361\275\223\004d>\322\024\316>U\361\313?\'\236)\300\337w\361>Q?\265>\331\346\345:&\274\226>\371\214\231\277\033jB\300\330\267u>\352\372\031=#\\|>\0236\367\274G(0=X~\270\276\330\306\017\276\335T\001>\304-\263>~x\226=.\303f>\355\376\"?\334\342\336=C{3\276&\201\033>WC\324=\352\237\333>\315*\277=\n}T>\320\322v\275\242\213\224\275F\352)\276{\304\037\277!\000\n>+\016j>\302\370-<8\2667\275\277\336\304\276&\257\253=\177|\037\277\345\373l\276\2563\005=\271o(>_\035\204;S\271V>$\375\304>\025\273h\276\216\340k\275\311\352%>\247|a\276\254\375~=\344Tn=\240\322\013>#\rt\276\035x\353=\365\272\325\276\273-\364>\316\332\313\276;\345\212>\204\263\262<\364=,\275\361G|>-/\344<v\240\237>\312]\326=Xf\324=\034\206\235\275\031\312\001=\rx\024>2\307F>\254\307\207>\223\257\022\276\206\316\365=\211\017\202>C8\n\276\037\266W\277x\357\231>_\241^\274\212ub>o\262O\276XG\337\275\\\rE\276 \275g\274\312B3\276\362\263Q\276.\300c>\014\366\257\275\336o\257\275x\217-\275\270^\330=\271\264 \276|r\342=(\006M>L\311^\275\250\266\016\275pG@=\302<Z>\024r\331=\000eN\273\344\3039>`\314u\274@\321>>\337\016\222\275\331\345W\277O\201\013\276_#\001=X\002\005=\266I^?Q\2235\275N\025\037=\023\020\266>|U<>-Xg>\233\360\341\276\036\327{\274\3245\201\276\"eC?\250\177g\276X\261O\275\270\225\322=\330/\301=\234\rr?\253\226R\276\005v\337=j\343\252\275\214;\306\276\362@\227\276\220S\023\277\253x\312\276\216\322\034?lp%\275\224\350k?\006\332f\275\211t\220\273\252U\261>n\217U>\245\270:>\035</\277)T{>\346\np\274]\237\203?\373\347q\276\322\266[>3\272\"\276\263\304c\276\335\335\213?~\262;\275\021\323\315>:\034\026> Df\276\\\010\254>r\325\236>\302v\326>\007:\320<\235\312\221>\234\341B\274\356\204\206>@\000&\277-\227\334=\276\263\251\275\302\326\327\276\274\241\035>\340D\340>\202\234\256\277G\251W\277U\206\002?gp\016>\005E2>\265\230\">\360%\214\276\263\025\341>\237~\307\276\311\377m>1\243\327=\r\245\004>O3\255>\302\301\342\274c\277\343\275\013\376\225>\223v0>\305\006\267=\333\240\027?\3463\036>\313IW>\263\357*\276,\356\253>z\233V\276`}\227<\004\372%>\2441\336=/\036\376\275\014m\325<!\000O>\345\344\017>\305\337\230>BB\345\273\332iw>\223\037\347\276\320\323\032>\343\017\245\276\032D#\277\350\245J>\001\034\\>\250\230\213=\305F\332\274\220\307\342\275:\024U>\364\204\235<M9[>\025\372\366>e\224\331\276\244\227\364=R\241\222\275ss\356=\251l\t?y\265\341\275\322kb>p\262\264\275\216\320\031>0\210z<\340\214X>q\354\200\275Ui\310?\313\270%\277y\270\215\277J\rq?H\332\211\276\346S\031@N<\325>\021\375\022>J\010\307?\346\375\324\277q\035\201?4\337\315>\000=\371\276\262\204\317>\244\353\253?\013\243\020\277\005C\336=|\266\003\276U~\027?\034J\013@5\\\213\277f~\020\276\375\305\310?\036\375\223?g\216\001?\221\371S\277\317L\302\277)\320\017?35\021>\212 \242>2\027\'>4\312\263>\270\270\372>\030\260\372\276\373C+?\2117\257>\\\331\023\2761~\311>\014`\356>@\224\200\276\253/N>\222@\001>\033&/>\350\307\217?Tq\205\277\240\221M\276g\206\035?\220{\331>\263\227`\276\026GL\276!\250}\277\025\253\363>\300\351\210>\025\342_\276\217\347\231>K\024E?\016+\254\272\204=\r?\023p>=\351L\347>QB\225>m\'e>\227\321\231\275\373b\302>D\0104>lt\020\276\341y\231>\007Y\216\277\270EU>\010r\213\275\306\331\017?TM\336\276\255U<>\262\032\177>\310\327:\277~3\217>\207,\204>\312\334\033>\177\002\263=z\334\240>\307\205\330;\000\362\337>>#S<\277>\210\276M\304\275\273\\\362\206>\331\r(>\302C\366>\351>4>Di\010\276G\216j>\246B0\276W\300\260=\232\364B?|\232\252=\027\343\243\276\326b\326>a4\366\276\201\256\036\277L%b>\247\001\211>3\305l\276;{6\2756\325\030\277\357\024\315>\327Fn?0\234\031\277\345/\364>\260\220_=R\207\334=\243\032\326>\355\341\306>\266\370\017\276\2500A>d6\r\276\302\034\251\275S\3411\273\263\037\271\275p\260\254>\020\224\226\276\346\230\t\276\024\373\t?\243K|\277y\340w>\200*u><^\361>\314\343|>\260\0349>\342\216O>\023\275\261\276?(\004\276Y1N=\246\213]\275s\274\213>\264q\310=\200+r?x1o\2763\377\032\276s?\242>\\P\255>mJt>\321\374\310>s\270\340=\252\365\021\276\3531E>\203\023\215\276UZ\\?\364\332\321=j\260\274>\332\2031>\255MM?*\366\010>\024u\273>f\237\022\276\362Vs\276\322`\275>P \007?\2735\000\276\270)C\2768\002\344\2749\023\225\276\366\n+>|s\303=)\267.\274\270\347\'?\026\317f\275I\214\261>CO\257\275c\177C\277\344qx=R\272h?\343\033\355\276e%\">!eD>\366\034Z>$u\025\277>~\337=x\017K\277\337\025\026\277S\r\320>]\260\014\277}\202\242\277\0245i>\0235\272>\272\357S>@\nb\273Y\332\223>\0318\026>\345R=\277\360/\032\277\364e\006?\010J\327\277\321\207\217=\303\336\001?.6j>V<\271\276b\305}>`/\037=\207`=>w\033S\275\331\330*>\302\347)>.D\026>\302a\241>Q\365\234>uIH>+\236\005\275\217\272\200=\373\235\n\277\230*&\276\335\253;>\264\221\365=bO\265>\360\241\232\276\276\262\225>\321\267N>\222\276F\276\314\036g>\240\203\257=tB\213=\030\217\001=\266\010\001\276\343G.\276Z\324O>\244\371\245=\352\265\"\276\234\326\235=\234\276\250=0\216w=<\353\370=\000\237t;\21002>{\304a\276.\353\364\275H\371\375=l\326\020>\360xT>\331xA\276\310\372>=\277*/\276\330\313\246\274NlJ\276\340\356\231\275\340v\313<lo\273\275 e\324=\366w\023\276\260@\020=t\360v\275\300\'\220<`f\021\276>|.>`h\314=\030v\002>n\214\034>\300<\234<\232e7\276\020\035\322<\020\316\316<@G\\>r\037B>p\007\032=\000\207 =$\361\260=(h;\276`<\022>\313\013O\276@ \360\273\230\2614=\214CJ>\312+\325\275T\261\006>2\017\">\032\005`>N}\247\275X\221\216=M\215`\276\340db=\210oj\276\214\374Z\275\316\233j>\214f7\276P,G=\027=N\276\013\220f\276x\303\026\276\2206\246=\2213F\276o\001=<x@F\275mi\245>9\364\006?\370\252\201>\354r\307\275\317i\022>\356S\363\276 \220\242>\370y\271>%\215\224\275Kg\236\2753\031\023?\367\031\014>\034S\321=cs#>\372\";\277\027\311\027>\373\rK>b\366\036>\263\260\306>\363\225\024\277\264\343\345>o\236[>\305\217h\274\340\330N>\301\307\235\277H\265\236>w\241\215>q\206\374\275\264\327\213>\337;\217=\332\037\245>2\364\254>&$\357=\370\321Y=\010h\031?\367I\n>L\276\223>~\272\006>R|q\276P#\263=\345\227u>\333G\247=\014\340\231>R\033\\\276\017\217C>\370\354>\276\244w\243\277+bG?:\375\r\277\324\262\336<\316\341m>7\2441\276\323\266\305\276\327\216V>+\261\021> \223\022>\333\020\336>j\207\303>\321\004)\277{\316\246\276\337\330\376\276u\014\023\276\255i\r\276\036\220\277=\321\326\006>\225?v>GL\013\300\336\010l\276\240@\030>N%\272=\234P\032<\326^\376\274\010*\275\276\205\025J>\260}s\300^\304\006\275kz\002\277\237Ln<g\177\247=\271u\233\276\202\304\237;\357B3\275\332\010\000>\333\2363\2778\242\204>,\2511\277\345E;\274\200\"\022>\270\360\035>o\nJ>g\352\203\276\207X \2778\376\013>\r\233\213\2764\262\216\276\202\220\220\276D\337\004\276\3429\331\277d.\203>\335\373S\275+\004c>\346\205>>\351\245\005\277v\324\020\277\343\263m\277Z\031\217>f`>\276\205k\306\276\\\332\233>\224\211\375=\276%\230=\220\031C>\354\r\311=v\252\007=u\325\271\276\004\264\276\275\340 E>*Za\277U\301K\276(\221\025>\021Q[\276x:\222\275Z\374\\\276~\265\245\275B\n9>0\3656>-\347U\276\360\336\355\274x\267?=\260\305\306<\240\222\201\275P\"\376\275\200T\335\273\333\264>\276P>1=\030\021R\275t\026\225\275p\003\207<\342\350V\276\264u\317=.\264d>\365\360\\\276\250u\270=T\367\013>\344\275\007>\354z\360=\355\303L\276\2449\324\275\350\374\374=\307\026\343\275\270\331\370=\300\312\255<0\223\347=XG\214<\260\206\351\274t4?\275\220\252\315=\334\320\243\275\314=T>`\250\353\273\370\363\304\275A\0015\276\250\227L=\336\371\326\275\360~\354\274@\364\275=^\031F>0\245q= \264\345\273h\376\026>\250Fa>\364\003\005>\334\255]\276$\267\320=,\206\303\275<F\014>@\372j=Xp)={iI\276\322\274.\276\030\021\327=\342:\016>\210H\347=\034\371\344=J!k\276\r\211a\276\254\313\032>\340\344A=\340\t\036<\310\023\303=\236\311\215\276\r\362\262\276\027)\273>f\225\375\276\272\2137>a\327\204\275\225J\367=\332\335\312<.)\365<\337\327\245\276\323\3734\277\005\376\210=\354\277\206>\374\220;\276\323\240<\277\253\023\013?h\267\000>\200C\026<o\364\203=~+\371\275\317\372\215\275X\256\017\277\005\025\225>%%\315\276\231\213?\277\036E\320\276\243F\221\277Q\360\226\275\355/h>\253\016\361=&MH\276~\375\271=^\004v=\253\373%\276\035\332\037\274\205Up\274\024\025/\2779\240\377\275h\032S\276{\207\371>\304\327\006?\203vf\276\214^/>\nr\322\274z\314\246\276q\212`\276\334\203\231>\3417\342\274\220\007a\277;_\360\274\202\225\214\276\260j=?\030*\233>\311\365\275\276\315\205z>\307sN\276\364^\225<\335\335\226\276V4\353=E9\256>\376\335\311\2731}\004>\334e\330\277O\367\005\277\215\265\252>\3209\300<Qe!>\034\'\014\277\242I\016\277\326\234e>\224\362\273><\362\240>\036\014\355\275\356v\233<W.u?B_\230\277\3613o>\247\357\375\275\270h\224>C\2448\276\213\255\230>]\310\303\277\370\210S;\3573\035\276\234W:>\350\200\'\273\310\n\016\300\212\331h?\233N\264\276\260\\\004\276b\206n>\374\336+=\340\215\007?\232\247`=f\272\325<\213A\372\27660C\300V\322\005?\323\317*\277\365\302\232\276Y$\032>\354\351\207>\370\322s=\024=\205?\034y\212?\005=\325=d\224\220?\342\341\350?&\344\240\276C\247\300\277\221\307\222=y\324\236\276\323h\311=\000n\230=\347\036\311>\335\r\201\276\3466b?e\374\341<<@\264>Z\2178?\315\356\251\277\265\004\316?\037B\n=,\365\304?AK\351<\372_\242>y\260\274?\007\340^\275\261\223w\276\221mc?\004\246/\277\373\315\230\276x\306\374\274b\032D>\302\327\004\300\334\305\233>c\375\270\276\026\002\n>lD\003>\003/\351>\034t\036\277\362\277\242=R\003k\300\224t5\277"
      }
    }
  }
}
node {
  name: "sequential/dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/MatMul"
  op: "MatMul"
  input: "sequential/dense/Cast"
  input: "sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        tensor_content: "\221\336m@\364A\276?\036\314J?\242/Q?\365\036\005@\004\3126@Cg\271?\242##>\231\215\375?\250\r\361?P\225\224?\262\320/\277\207\315\030@\254\243\343?\002:o@\312\335\016@\321Q\204?\226J\264\275U\227\302@M_\017@\006\206\214?\370o\257?J\355\206@FJ\274?"
      }
    }
  }
}
node {
  name: "sequential/dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense/MatMul"
  input: "sequential/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense/Relu"
  op: "Relu"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
          dim {
            size: 11
          }
        }
        tensor_content: "uv\001\275\336Ll=4\347\220=\352&\366\275\274\200\'=\366\231\274\276\370\262\013=\204\337h>t6E\274x\276\347=|\270\000>8v\336={\355\036>SnM>\227\234E>l\3674>b7\016\276\376|t\275\007\350m\276,@e>\340\341i>\341\236\206=\342\231r\276\350\251.\277\225\031\177?\355\375\215?\260,\t\27550\214\275\312KY?\361\013_\274\232,\276\276<E%?\r\247B?`\001\376\276\304\032\022=\362v\372\277u\372\236\277\201$\022\300\022\'\253\275\002\021\226\2773\240\372\276\357\313\207\277\226\360\316\276\264\220k\277\361\rR<\230\367\016\275p\311\323<?#p\274\313\374\316\274Y\344\336\2740\314\021\275*\276)\300\264\346W\274\376\014\205\275@\315\030\274p\245A=\311\317\207\277l\037\320\274\350\265\201\2749 \263\274\026\305\333<\343\3242\275\203\214a=\223\002\323<m\332n\275\334\326k\274S1\242>\004#\306>\277#\363=;~\311=`\023M>\367\362H=\027\305)>\200k\225>\2430s>\303\271\245\276}9v>\217\324\227\276\207\333\035\277Mo\377\276\343\203\356\276\210^\262\276\025\322\204>t\313\202>\005\030#\276\013\t\376\276\244c\316\276+w\231\276*\"\305\276&\305\251\274\2633\017\274\243\205r\275t\006\244\274\262(\215>h\262\254\275\322I)<\270\321\262\276\260\332\266\275 5\030\274.\215\257>\255\230\313\2775p|\276\307\001&\276r\204\311\276(\267\210=\205\017s\276\265p\223>\314\222_>\261\372\026><\302\376\27402\354\275%7\247\275\252\220\227=\362\230\356=\300Z\334<\301\215M\275\260\036\031>\t\302\304>?f\247\276\001\357\005=&\323R>)Rg<\352\2734\274\340\016\036=\201j\240<\214b2=Vb\267<\002\325\255<\353\230\224\274\324Lw<\252\224\231<\350\3272<\354\351\255\276\2420\205\300\245\"\007\277\265\261\316\275\025\331\025\277T\230\002>^\035\274=\261\260\177\275\354^\212\276\021\204\375\276\314\313\017\277\013\326\212\275@\023 ?\303hp=U\346\244\273\340\360\023>\034\315\246\274~\342\262\275\356b+\276\313b\236\274\241\265\246\275\226\313\317\273\244\023\240\275C\2217=;;5\276\374xQ\276r\325\272\275\265\350g=\016x\267\276\373\016\227<!W\320\275\310\376\366\275#\232\345\275,<\262=\213qz?^cQ>c\312\312\274\201\207\247>\374\346<\2764\026?>~\242h?\317\344\240\276p4\230\277\360\236\177>\352\'`\300\n\344\334\276#\275\004\277\t\013\215\277\230N8\277\036\222\203=t\014\343\277K\027D\275%\255c\2770x|\2770@}\276q\\\367=\221\310\004\276\037\260\236>\205I\035\2745\021\215>s\313\003;\301\321\227>V\275\241>\2645\276\275\337\375T>\303\271\200>\227 \315\275)\016[=\013jB\275\326\230$\275\331\244\216\275\277\236[\277sE\376<R\361\252=\356~\275\275\212\243\251\274ZH\2519\377\306(>\236\363\315\276L\214\004\275HD\304=E/\026\2764\205\302=\230\342o>e\037x\276Z6,>\237\001\233<*\020\007\273\263\001\034<R\2001?y\216\250>\253\262\"9\364\354\332>YQ\031\275m\364&<nOI=\333]_=Ui\246>\302\213\246>\037f\266?l\201\222\2778\324\350\276\246t\246\275\367m\017=\360\350\302\276\252n\313\275\312\256n\277\021G\005@\336.\226<1\376a\277\255E\200\277\014\321\233\275Bj\256\274\310}&;\235\024\035\276\3368\215\2754p\324<\320P\215\275^]\206\277X\306\205<\032i\377;\216<\232>\2361\021\276\"\262\013=\210/\244<x\nR=atp\275\344\265B<\335\205\272<.\261\232>\215\352\214=\362\230\264<"
      }
    }
  }
}
node {
  name: "sequential/dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_1/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/MatMul"
  op: "MatMul"
  input: "sequential/dense/Relu"
  input: "sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
        }
        tensor_content: "\027:\231=\323\003\'\300\205\253/\275\n\006M\277\022\373\375>\323\220]?\n\205\375\277\316\017t\277\2443\315\275\313lB\27672\035>"
      }
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "sequential/dense_1/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense_1/MatMul"
  input: "sequential/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/dense_1/Sigmoid"
  op: "Sigmoid"
  input: "sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "sequential/dense_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 414
}
 }
  signature_def {
    key: "predict"
    value {
      inputs {
        key: "Input"
        value {
          name: "Input:0"
          dtype: DT_INT64
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 87
             }
          }
        }
      }
      outputs {
        key: "prob"
        value {
          name: "Identity:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 11
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
